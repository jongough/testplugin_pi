#!/usr/bin/env bash

#
# Upload the .tar.gz and .xml artifacts to cloudsmith
#
set -xe

PROD_REPO='@CLOUDSMITH_USER@/@CLOUDSMITH_BASE_REPOSITORY@-prod'
BETA_REPO='@CLOUDSMITH_USER@/@CLOUDSMITH_BASE_REPOSITORY@-beta'
ALPHA_REPO='@CLOUDSMITH_USER@/@CLOUDSMITH_BASE_REPOSITORY@-pkg'

if test "@APPVEYOR_TEST_DEPLOY_TO_CLOUDSMITH@" != "true"
then
    git_head=$(git rev-parse master) || git_head="unknown"
    if [ "$git_head" != "$(git rev-parse HEAD)" ]; then
        echo "Not on master branch, skipping deployment."
        exit 0
    fi
fi

set +x
if [ -z "$CLOUDSMITH_API_KEY" ]; then
    echo 'Cannot deploy to cloudsmith, missing $CLOUDSMITH_API_KEY'
    exit 0
fi
set -x

echo "Using \$CLOUDSMITH_API_KEY: ${CLOUDSMITH_API_KEY:0:4}..."

commit=$(git rev-parse --short=7 HEAD) || commit="unknown"
now=$(date --rfc-3339=seconds) || now=$(date)

BUILD_ID=${APPVEYOR_BUILD_NUMBER:-1}
commit=$(git rev-parse --short=7 HEAD) || commit="unknown"
tag=$(git tag --contains HEAD)

xml=$(ls *.xml)
exe=$(ls *.exe)
tarball=$(ls *.tar.gz)
tarball_basename=${tarball##*/}

source ../build/pkg_version.sh

oldexe=$exe
exe=${exe/-${PKG_TARGET_VERSION}/}
exe=${exe/_${PKG_TARGET}/-pi${OCPN_API_VERSION}-${PKG_TARGET}-win32}
mv $oldexe $exe

echo $BUILD_BRANCH
echo $BUILD_TAG
echo ${#BUILD_TAG}

BUILD_BRANCH_LOWER=`echo $BUILD_BRANCH | tr '[A-Z]' '[a-z]'`
if [ "$BUILD_BRANCH_LOWER" = "master" ]; then
    echo "In master branch "
    if [ -n "$BUILD_TAG"  ]; then
        echo "building with tag"
        VERSION=$BUILD_TAG
        REPO="$PROD_REPO"
    else
        VERSION="@PROJECT_VERSION@+${BUILD_ID}.${commit}"
        echo "building without tag"
        REPO="$BETA_REPO"
    fi
else
    echo "In non master branch"tarball_name
    if [ -n "$BUILD_TAG" ]; then
        echo "buildnig with tag"
        VERSION=$BUILD_TAG
        REPO="$BETA_REPO"
    else
        echo "building without tag"
        VERSION="@PROJECT_VERSION@+${BUILD_ID}.${commit}"
        REPO="$ALPHA_REPO"
    fi
fi
echo $VERSION
echo $REPO

tarball_name=@PACKAGE@-${PKG_TARGET}-${PKG_TARGET_VERSION}-${OCPN_TARGET}-tarball

cat $xml

# There is no sed available in git bash. This is nasty, but seems
# to work:
echo 'substituting xmal file stuff'
while read line; do
    line=${line//--pkg_repo--/$PKG_REPO}
    line=${line//--name--/$tarball_name}
    line=${line//--version--/$VERSION}
    line=${line//--filename--/$tarball_basename}
    echo $line
done < $xml > xml.tmp && cat xml.tmp && cp xml.tmp $xml && rm xml.tmp

cat $xml

cloudsmith push raw \
    --republish \
    --no-wait-for-sync \
    --name @PACKAGE@-@PKG_TARGET@-@PKG_TARGET_VERSION@-${OCPN_TARGET}-metadata \
    --version ${VERSION} \
    --summary "@PACKAGE@ opencpn plugin metadata for automatic installation" \
    $REPO ./$xml

cloudsmith push raw  \
    --republish \
    --no-wait-for-sync \
    --name $tarball_name \
    --version ${VERSION} \
    --summary "@PACKAGE@ opencpn plugin tarball for automatic installation" \
    $REPO $tarball

cloudsmith push raw \
    --republish \
    --no-wait-for-sync \
    --name @PACKAGE@-@PKG_TARGET@-@PKG_TARGET_VERSION@-installer \
    --version ${VERSION} \
    --summary "@PACKAGE@ installation package" \
    $REPO ./$exe
